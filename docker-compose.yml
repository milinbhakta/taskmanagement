version: "4.2"
services:
  db:
    build: ./postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER}",
          "-d",
          "${POSTGRES_DB}",
          "-h",
          "db",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task-management

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start
    environment:
      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: ${DB_ADDR}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_URL: ${KC_HOSTNAME_URL}
      KC_HOSTNAME_ADMIN_URL: ${KC_HOSTNAME_ADMIN_URL}
      KC_HTTP_RELATIVE_PATH: ${KC_HTTP_RELATIVE_PATH}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED}
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_LOG_CONSOLE_OUTPUT: ${KC_LOG_CONSOLE_OUTPUT}
    ports:
      - 8080:8080
    volumes:
      - ./keycloak/themes/task-management:/opt/keycloak/themes/task-management
      - keycloak-data:/opt/keycloak/data/
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/localhost/8080'
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task-management

  backend:
    build: ./backend
    restart: always
    environment:
      REALM_PUBLIC_KEY: ${REALM_PUBLIC_KEY}
      SECRET_KEY: ${SECRET_KEY}
      CLIENT_ID: ${CLIENT_ID}
      AUTH_SERVER_URL: ${AUTH_SERVER_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_PORT: ${DB_PORT}
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:5000/api/v1/"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task-management

  frontend:
    build:
      context: ./frontend
      args:
        VITE_REDIRECT_URI: ${VITE_REDIRECT_URI}
        VITE_AUTH_URL: ${VITE_AUTH_URL}
        VITE_CLIENT_ID: ${VITE_CLIENT_ID}
        VITE_REALM: ${VITE_REALM}
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
        VITE_AVATAR_BASE_URL: ${VITE_AVATAR_BASE_URL}
    restart: always
    ports:
      - 5173:5173
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend:5173/taskmanagement/"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task-management

volumes:
  postgres-data:
  keycloak-data:

networks:
  task-management:
